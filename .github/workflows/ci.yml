# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        mongodb-version: [4.4]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@90004df786821b6308fb02299e5835d0dae05d0d # 1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install dependencies
        run: npm i

      # for now only check the types of the server
      # tsconfig isn't quite set up right to respect what vite accepts
      # for the frontend code
      - name: Check Types (Server)
        run: npm run check-types:server

      - name: Test
        id: test
        run: |
          npm run test-coverage-ci
          npm run test-coverage-ci --workspaces --if-present

      - name: Upload test coverage report
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      # - name: Exit if coverage condition not met
      #   if: ${{ steps.test.outputs.exit_code }} != 0
      #   run: exit ${{ steps.test.outputs.exit_code }}

      - name: Build frontend
        run: npm run build-ui

      - name: Save build folder
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build
          if-no-files-found: error
          path: build

      - name: Download the build folders
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: build
          path: build

      - name: Run cypress test
        uses: cypress-io/github-action@b8ba51a856ba5f4c15cf39007636d4ab04f23e3c # v6.10.2
        with:
          start: npm start &
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          run: npm run cypress:run
