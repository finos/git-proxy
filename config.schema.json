{
  "$schema": "https://json-schema.org/draft-07/schema",
  "$id": "https://git-proxy.finos.org/config.schema.json",
  "title": "GitProxy configuration file",
  "description": "Configuration for customizing git-proxy",
  "type": "object",
  "properties": {
    "proxyUrl": { "type": "string" },
    "cookieSecret": { "type": "string" },
    "sessionMaxAgeHours": { "type": "number" },
    "api": {
      "description": "Third party APIs",
      "type": "object",
      "properties": {
        "ls": {
          "type": "object",
          "description": "Configuration used in conjunction with ActiveDirectory auth, which relates to a REST API used to check user group membership, as opposed to direct querying via LDAP.<br />If this configuration is set direct querying of group membership via LDAP will be disabled.",
          "properties": {
            "userInADGroup": {
              "type": "string",
              "description": "URL template for a GET request that confirms a user's membership of a specific group. Should respond with a non-empty 200 status if the user is a member of the group, an empty response or non-200 status indicates that the user is not a group member. If set, this URL will be queried and direct queries via LDAP will be disabled. The template should contain the following string placeholders, which will be replaced to produce the final URL:<ul><li>\"&lt;domain&gt;\": AD domain,</li><li>\"&lt;name&gt;\": The group name to check membership of.</li><li>\"&lt;id&gt;\": The username to check group membership for.</li></ul>",
              "examples": [
                "https://somedomain.com/some/path/checkUserGroups?domain=<domain>&name=<name>&id=<id>"
              ]
            }
          }
        },
        "github": {
          "type": "object",
          "properties": {
            "baseUrl": {
              "type": "string",
              "format": "uri",
              "examples": ["https://api.github.com"]
            }
          }
        }
      }
    },
    "commitConfig": {
      "description": "Enforce rules and patterns on commits including e-mail and message",
      "type": "object"
    },
    "attestationConfig": {
      "description": "Customisable questions to add to attestation form",
      "type": "object"
    },
    "domains": {
      "description": "Provide domains to use alternative to the defaults",
      "type": "object"
    },
    "rateLimit": {
      "description": "API Rate limiting configuration.",
      "type": "object",
      "properties": {
        "windowMs": {
          "type": "number",
          "description": "How long to remember requests for, in milliseconds (default 10 mins)."
        },
        "limit": {
          "type": "number",
          "description": "How many requests to allow (default 150)."
        },
        "statusCode": {
          "type": "number",
          "description": "HTTP status code after limit is reached (default is 429)."
        },
        "message": {
          "type": "string",
          "description": "Response to return after limit is reached."
        }
      },
      "required": ["windowMs", "limit"],
      "additionalProperties": false
    },
    "privateOrganizations": {
      "description": "Pattern searches for listed private organizations are disabled",
      "type": "array"
    },
    "urlShortener": {
      "description": "Customisable URL shortener to share in proxy responses and warnings",
      "type": "string"
    },
    "contactEmail": {
      "description": "Customisable e-mail address to share in proxy responses and warnings",
      "type": "string"
    },
    "csrfProtection": {
      "description": "Flag to enable CSRF protections for UI",
      "type": "boolean"
    },
    "plugins": {
      "type": "array",
      "description": "List of plugins to integrate on GitProxy's push or pull actions. Each value is either a file path or a module name.",
      "items": {
        "type": "string"
      }
    },
    "authorisedList": {
      "description": "List of repositories that are authorised to be pushed to through the proxy.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/authorisedRepo"
      }
    },
    "sink": {
      "description": "List of database sources. The first source in the configuration with enabled=true will be used.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/database"
      }
    },
    "authentication": {
      "description": "List of authentication sources. The first source in the configuration with enabled=true will be used.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/authentication"
      }
    },
    "tempPassword": {
      "description": "Toggle the generation of temporary password for git-proxy admin user",
      "type": "object",
      "properties": {
        "sendEmail": { "type": "boolean" },
        "emailConfig": {
          "description": "Generic object to configure nodemailer. For full type information, please see https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/nodemailer",
          "type": "object"
        }
      }
    },
    "apiAuthentication": {
      "description": "List of authentication sources for API endpoints. May be empty, in which case all endpoints are public.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/authentication"
      }
    },
    "tls": {
      "description": "TLS configuration for secure connections",
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "key": { "type": "string" },
        "cert": { "type": "string" }
      },
      "required": ["enabled", "key", "cert"]
    },
    "configurationSources": {
      "enabled": { "type": "boolean" },
      "reloadIntervalSeconds": { "type": "number" },
      "merge": { "type": "boolean" },
      "sources": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Configuration source"
        }
      }
    },
    "uiRouteAuth": {
      "description": "UI routes that require authentication (logged in or admin)",
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/routeAuthRule"
          }
        }
      }
    }
  },
  "definitions": {
    "authorisedRepo": {
      "type": "object",
      "properties": {
        "project": { "type": "string" },
        "name": { "type": "string" },
        "url": { "type": "string" }
      },
      "required": ["project", "name", "url"]
    },
    "database": {
      "type": "object",
      "properties": {
        "type": { "type": "string" },
        "enabled": { "type": "boolean" },
        "connectionString": { "type": "string" },
        "options": { "type": "object" },
        "params": { "type": "object" }
      },
      "required": ["type", "enabled"]
    },
    "authentication": {
      "type": "object",
      "description": "Configuration for an authentication source",
      "oneOf": [
        {
          "title": "Local Auth Config",
          "description": "Configuration for the use of the local database as the authentication source.",
          "properties": {
            "type": { "type": "string", "const": "local" },
            "enabled": { "type": "boolean" }
          },
          "required": ["type", "enabled"]
        },
        {
          "title": "Active Directory Auth Config",
          "description": "Configuration for Active Directory authentication.",
          "properties": {
            "type": { "type": "string", "const": "ActiveDirectory" },
            "enabled": { "type": "boolean" },
            "adminGroup": {
              "type": "string",
              "description": "Group that indicates that a user is an admin"
            },
            "userGroup": {
              "type": "string",
              "description": "Group that indicates that a user should be able to login to the Git Proxy UI and can work as a reviewer"
            },
            "domain": { "type": "string", "description": "Active Directory domain" },
            "adConfig": {
              "type": "object",
              "description": "Additional Active Directory configuration supporting LDAP connection which can be used to confirm group membership. For the full set of available options see the activedirectory 2 NPM module docs at https://www.npmjs.com/package/activedirectory2#activedirectoryoptions <br /><br />Please note that if the Third Party APIs config `api.ls.userInADGroup` is set then the REST API it represents is used in preference to direct querying of group memebership via LDAP.",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Active Directory server to connect to, e.g. `ldap://ad.example.com`."
                },
                "baseDN": {
                  "type": "string",
                  "description": "The root DN from which all searches will be performed, e.g. `dc=example,dc=com`."
                },
                "username": {
                  "type": "string",
                  "description": "An account name capable of performing the operations desired."
                },
                "password": {
                  "type": "string",
                  "description": "Password for the given `username`."
                }
              },
              "required": ["url", "baseDN", "username", "password"]
            }
          },
          "required": ["type", "enabled", "adminGroup", "userGroup", "domain"]
        },
        {
          "title": "Open ID Connect Auth Config",
          "description": "Configuration for Open ID Connect authentication.",
          "properties": {
            "type": { "type": "string", "const": "openidconnect" },
            "enabled": { "type": "boolean" },
            "oidcConfig": {
              "type": "object",
              "description": "Additional OIDC configuration.",
              "properties": {
                "issuer": { "type": "string" },
                "clientID": { "type": "string" },
                "clientSecret": { "type": "string" },
                "callbackURL": { "type": "string" },
                "scope": { "type": "string" }
              },
              "required": ["issuer", "clientID", "clientSecret", "callbackURL", "scope"]
            }
          },
          "required": ["type", "enabled", "oidcConfig"]
        },
        {
          "title": "JWT Auth Config",
          "description": "Configuration for JWT authentication.",
          "properties": {
            "type": { "type": "string", "const": "jwt" },
            "enabled": { "type": "boolean" },
            "jwtConfig": {
              "type": "object",
              "description": "Additional JWT configuration.",
              "properties": {
                "clientID": { "type": "string" },
                "authorityURL": { "type": "string" }
              },
              "required": ["clientID", "authorityURL"]
            }
          },
          "required": ["type", "enabled", "jwtConfig"]
        }
      ]
    },
    "routeAuthRule": {
      "type": "object",
      "properties": {
        "pattern": { "type": "string" },
        "adminOnly": { "type": "boolean" },
        "loginRequired": { "type": "boolean" }
      }
    }
  },
  "additionalProperties": false
}
