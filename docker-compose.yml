services:
  git-proxy:
    build: .
    ports:
      - '8000:8000'
      - '8081:8081'
    command: ['node', 'dist/index.js', '--config', '/app/integration-test.config.json']
    volumes:
      - ./integration-test.config.json:/app/integration-test.config.json:ro
      # If using Podman, you might need to add the :Z or :z option for SELinux
      # - ./integration-test.config.json:/app/integration-test.config.json:ro,Z
    depends_on:
      - mongodb
      - git-server
    networks:
      - git-network
    environment:
      - NODE_ENV=test
      - GIT_PROXY_UI_PORT=8081
      - GIT_PROXY_SERVER_PORT=8000
      - NODE_OPTIONS=--trace-warnings
      # Runtime environment variables for UI configuration
      # API_URL should point to the same origin as the UI (both on 8081)
      # Leave empty or unset for same-origin API access
      # - API_URL=
      # CORS configuration - controls which origins can access the API
      # Options:
      #   - '*' = Allow all origins (testing/development)
      #   - Comma-separated list = 'http://localhost:3000,https://example.com'
      #   - Unset/empty = Same-origin only (most secure)
      - ALLOWED_ORIGINS=

  mongodb:
    image: mongo:7
    ports:
      - '27017:27017'
    networks:
      - git-network
    environment:
      - MONGO_INITDB_DATABASE=gitproxy
    volumes:
      - mongodb_data:/data/db

  git-server:
    build: localgit/
    ports:
      - '8080:8080' # Add this line to expose the git server
    environment:
      - GIT_HTTP_EXPORT_ALL=true
    networks:
      - git-network
    hostname: git-server

networks:
  git-network:
    driver: bridge

volumes:
  mongodb_data:
